@model MVCBookStore.Models.Author

@{
    ViewData["Title"] = "Details";
}

<h1>Author Details</h1>

<div>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.FirstName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.FirstName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.LastName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.LastName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.BirthDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.BirthDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Nationality)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Nationality)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Gender)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Gender)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Books)
        </dt>
        <dd class="col-sm-10">
            @if (Model.Books != null)
            {
                @foreach (var books in Model.Books)
                {
                    <a asp-controller="Books" asp-action="Details" asp-route-id="@books.Id">
                        @books.Title
                    </a> <br />
                }
            }
        </dd>
    </dl>
</div>
<div>
    @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
    {
        <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a>
    }
    <a asp-action="Index">Back to List</a>
</div>
